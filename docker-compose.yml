services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mytype-frontend
    hostname: frontend
    ports:
      - '${FRONTEND_EXTERNAL_PORT}:${VITE_DEV_SERVER_PORT}'
      - '3022:${VITE_PREVIEW_SERVER_PORT}'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - VITE_API_URL=${VITE_API_URL}
      - VITE_DEV_SERVER_HOST=${VITE_DEV_SERVER_HOST}
      - VITE_BUILD_OUT_DIR=${VITE_BUILD_OUT_DIR}
      - VITE_BUILD_ASSETS_DIR=${VITE_BUILD_ASSETS_DIR}
    networks:
      - mytype-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${VITE_DEV_SERVER_PORT}']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mytype-backend
    hostname: backend
    ports:
      - '${BACKEND_EXTERNAL_PORT}:${PORT}'
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
    networks:
      - mytype-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'nc -z localhost ${PORT}']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: mytype-database
    hostname: database
    ports:
      - '${DATABASE_EXTERNAL_PORT}:${DATABASE_PORT}'
    volumes:
      - mongodb_data:/data/db
      - ./database/init.js:/docker-entrypoint-initdb.d/init.js
    env_file:
      - ./.env
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_APP_USER=${MONGO_APP_USER}
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD}
      - MONGO_AUTH_MECHANISM=${MONGO_AUTH_MECHANISM}
      - MONGO_AUTH_SOURCE=${MONGO_AUTH_SOURCE}
      - MONGO_WIRED_TIGER_CACHE_SIZE_GB=${MONGO_WIRED_TIGER_CACHE_SIZE_GB}
      - MONGO_OPLOG_SIZE_MB=${MONGO_OPLOG_SIZE_MB}
    networks:
      - mytype-network
    command: ['--auth']
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  mytype-network:
    driver: bridge

volumes:
  mongodb_data:
